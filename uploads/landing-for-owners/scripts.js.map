{"version":3,"file":"uploads/landing-for-owners/scripts.js","mappings":"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","sources":["webpack://fsproperty-landing-compile/webpack/bootstrap","webpack://fsproperty-landing-compile/webpack/runtime/define property getters","webpack://fsproperty-landing-compile/webpack/runtime/hasOwnProperty shorthand","webpack://fsproperty-landing-compile/webpack/runtime/make namespace object","webpack://fsproperty-landing-compile/./src/LazyImages/LazyImages.ts","webpack://fsproperty-landing-compile/./src/variables/variables-export.scss","webpack://fsproperty-landing-compile/./src/variables/cssVariables.ts","webpack://fsproperty-landing-compile/./src/core/helpers/strings.ts","webpack://fsproperty-landing-compile/./src/RequestFormModal/RequestFormModal.ts","webpack://fsproperty-landing-compile/./src/core/helpers/html.ts","webpack://fsproperty-landing-compile/./src/RequestFormModal/RequestFormModalContent.ts","webpack://fsproperty-landing-compile/./src/root.ts","webpack://fsproperty-landing-compile/./src/RootNode/RootNode.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './LazyImages.styles.scss';\n\nfunction isElementInViewport(el: HTMLElement) {\n  const rect = el.getBoundingClientRect();\n  const wHeight = window.innerHeight || document.documentElement.clientHeight;\n  const { top, bottom } = rect;\n  // NOTE: Checking only vertical position\n  return bottom >= 0 && top <= wHeight;\n}\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const imgNode = document.createElement('img');\n    imgNode.setAttribute('src', url);\n    imgNode.addEventListener('load', (_event) => {\n      /* console.log('[LazyImages:loadImage] success', {\n       *   url,\n       *   _event,\n       * });\n       */\n      resolve(imgNode);\n    });\n    imgNode.addEventListener('error', (event) => {\n      const { target } = event;\n      // @ts-ignore: To add correct typings?\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load image with url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[LazyImages:loadImage]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n  });\n}\n\nfunction initLazyImageNode(node: HTMLElement, observer: IntersectionObserver) {\n  const isVisible = isElementInViewport(node);\n  if (!isVisible) {\n    return Promise.resolve(false);\n  }\n  const isLoaded = node.getAttribute('data-lazy-loaded');\n  if (isLoaded) {\n    return Promise.resolve(true);\n  }\n  /* NOTE: An alternative way to fetch data attributes\n   * const dataLazyImage = node.getAttribute('data-lazy-image');\n   * const dataOriginalImage = node.getAttribute('dataOriginalImage');\n   */\n  const { dataset } = node;\n  const { lazyMode, originalImage } = dataset;\n  /* console.log('[LazyImages:initLazyImageNode]', {\n   *   isVisible,\n   *   lazyMode,\n   *   originalImage,\n   *   node,\n   * });\n   */\n  // TODO: Load images asynchronously into another (temp) node, control success or error, and update target only on success\n  node.setAttribute('data-lazy-loading', 'true');\n  loadImage(originalImage)\n    .then((img) => {\n      if (lazyMode.startsWith('background')) {\n        const backgroundImage = `url('${img.src}')`;\n        node.style.backgroundImage = backgroundImage;\n      } else {\n        if (node.getAttribute('src') === img.src) {\n          return false;\n        }\n        node.setAttribute('src', originalImage);\n      }\n      // Finish\n      setTimeout(() => {\n        node.setAttribute('data-lazy-loaded', 'true');\n        node.removeAttribute('data-lazy-loading');\n      }, 350);\n      observer.unobserve(node);\n      return true;\n    })\n    .catch(() => {});\n}\n\nconst observer = new IntersectionObserver((entries, observer) => {\n  entries.forEach(({ target }) => {\n    initLazyImageNode(target as HTMLElement, observer);\n  });\n});\n\nexport function initLazyImages() {\n  const nodes = document.querySelectorAll('.LazyImage');\n  nodes.forEach((node: HTMLDivElement) => {\n    observer.observe(node);\n  });\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"landing-for-owners\";\nvar _2 = \"for-owners\";\nvar _3 = \"uploads/landing-for-owners\";\nexport { _1 as \"appFolder\", _2 as \"appId\", _3 as \"uploadsFolder\" }\n","/** @desc Re-export parsed and typed scss variables to ts code */\n\nimport * as cssVariables from './variables-export.scss';\n\n// See pre-exports in `variables-export.scss`\nexport interface TVariables {\n  appId: string;\n  appFolder: string;\n  uploadsFolder: string;\n}\n\nconst vars = cssVariables as TVariables;\n\nconst {\n  // prettier-ignore\n  appId,\n  appFolder,\n  uploadsFolder,\n} = vars;\n\nexport {\n  // prettier-ignore\n  appId,\n  appFolder,\n  uploadsFolder,\n};\n","export type GenericError = Error | string | undefined;\n\nexport function getErrorText(err: GenericError | unknown): string {\n  return err ? (err instanceof Error ? err.message : String(err)) : '';\n}\n\n/** quoteHtmlAttr -- quote all invalid characters for html */\nexport function quoteHtmlAttr(str: string, preserveCR?: boolean) {\n  const crValue = preserveCR ? '&#13;' : '\\n';\n  return (\n    String(str) // Forces the conversion to string\n      .replace(/&/g, '&amp;') // This MUST be the 1st replacement\n      .replace(/'/g, '&apos;') // The 4 other predefined entities, required\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      // You may add other replacements here for HTML only (but it's not\n      // necessary). Or for XML, only if the named entities are defined in its\n      // DTD.\n      .replace(/\\r\\n/g, crValue) // Must be before the next replacement\n      .replace(/[\\r\\n]/g, crValue)\n  );\n}\n","import { uploadsFolder } from '../variables';\nimport { GenericError, getErrorText, quoteHtmlAttr } from '../core/helpers/strings';\nimport { htmlToNode } from '../core/helpers/html';\n\n/* Data sending to `POST /uploads/landing-for-owners/dummy-submit-hook.php` as application/json with following fields:\n *\n * - name\n * - email\n * - phone\n * - comment\n *\n * Expecting a json response with two optional fields:\n *\n * - ok, boolean: The true value if the operation was successful.\n * - error, string: A brief text explaining the error (if any; it will be shown to the user). If successful, do not send anything (either NULL or an empty string).\n *\n */\n\nimport { getModalWrapperTemplate } from './RequestFormModalContent';\n\nimport './RequestFormModal.styles.scss';\n\ninterface BaseRepsonse {\n  ok?: boolean;\n  error?: string;\n}\n\nconst isDev = process.env.DEV;\nconst isDebug = process.env.DEBUG;\n\n// const submitFile = 'dummy-submit-hook.php';\nconst submitFile = 'accept-form.php';\nconst submitUrl = `/${uploadsFolder}/${submitFile}`;\n\nconst gcaptchaSiteKey = '6LdmGmMqAAAAABKSiuLlrVv1YmCuMC7wuIAXE3UZ'; // DEBUG: From wordwizzz\n// const gcaptchaSiteKey = '6LeiKGMqAAAAAEDkHP0n4mhtAWxuKHpzYbQR4k3e';\n\nlet gcaptchaId: number;\n\n/** DEBUG: Proceed submit even if errors have been found */\nconst debugDoSubmitWithErrors = false && isDebug;\n\nlet isVisible = false;\nlet modalNode: HTMLElement;\nlet formErrorNode: HTMLElement;\n\nlet innerNode: HTMLElement;\nlet pageWrapperNode: HTMLElement;\n\nlet formControls: NodeListOf<HTMLInputElement>;\nconst formControlGroups: Record<string, HTMLElement> = {};\n\nlet dontCheckErrors = false;\n\nfunction createModalWrapper() {\n  const modalWrapperTemplate = getModalWrapperTemplate();\n  const wrapperNode = htmlToNode(modalWrapperTemplate);\n  document.body.append(wrapperNode);\n}\n\nfunction toggleModal(show?: boolean) {\n  if (show == undefined) {\n    show = !isVisible;\n  } else if (show === isVisible) {\n    return;\n  }\n  document.body.classList.toggle('WithModal', show);\n  if (show) {\n    modalNode.classList.toggle('Message', false);\n    pageWrapperNode.setAttribute('inert', 'true');\n    document.addEventListener('keydown', onKeyPress);\n    modalNode.addEventListener('mousedown', onOuterClick);\n    innerNode.addEventListener('mousedown', onInnerClick);\n  } else {\n    pageWrapperNode.removeAttribute('inert');\n    document.removeEventListener('keydown', onKeyPress);\n    modalNode.removeEventListener('mousedown', onOuterClick);\n    innerNode.removeEventListener('mousedown', onInnerClick);\n  }\n  modalNode.classList.toggle('show', show);\n  isVisible = show;\n}\n\nfunction closeModal() {\n  toggleModal(false);\n}\n\nfunction showModal() {\n  if (!modalNode) {\n    initModal();\n  }\n  resetForm();\n  if (gcaptchaId != null) {\n    grecaptcha.reset(gcaptchaId);\n  }\n  requestAnimationFrame(() => toggleModal(true));\n}\n\nfunction onKeyPress(event: KeyboardEvent) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n}\n\n// Close modal on outer (not inner, see `onInnerClick` below) element click...\nfunction onOuterClick() {\n  closeModal();\n}\n\n// Prevent outer element click handle\nfunction onInnerClick(event: MouseEvent) {\n  event.stopPropagation();\n}\n\n/** Returns error status */\nfunction checkInputValue(id: string) {\n  if (dontCheckErrors) {\n    return true;\n  }\n  const group = formControlGroups[id]; // modalNode.querySelector('.form-group#' + id + '-group') as HTMLDivElement;\n  if (!group) {\n    throw new Error(`Not found form group for id '${id}'`);\n  }\n  const input = group.querySelector('.form-control') as HTMLInputElement;\n  const error = group.querySelector('.error');\n  const { value, dataset } = input;\n  const { required } = dataset;\n  const errors: string[] = [];\n  if (required && !value) {\n    errors.push('Необходимо заполнить поле');\n  }\n  const hasErrors = !!errors.length;\n  error.innerHTML = errors.map((str) => quoteHtmlAttr(str)).join('<br>\\n');\n  group.classList.toggle('with-error', hasErrors);\n  /* console.log('[RequestFormModal:checkField]', {\n   *   hasErrors,\n   *   errors,\n   *   value,\n   *   dataset,\n   *   required,\n   * });\n   */\n  return !hasErrors;\n}\n\nfunction setLoading(status: boolean) {\n  modalNode.classList.toggle('Waiting', status);\n}\n\nfunction setSubmitError(error?: GenericError) {\n  // const formErrorNode = modalNode.querySelector('.form-error');\n  const errorText = getErrorText(error);\n  const hasError = !!errorText;\n  modalNode.classList.toggle('with-error', hasError);\n  formErrorNode.innerHTML = quoteHtmlAttr(errorText);\n}\n\nfunction setSent(isSent: boolean) {\n  modalNode.classList.toggle('Message', isSent);\n}\n\nfunction resetForm() {\n  modalNode.classList.toggle('CaptchaPassed', false);\n  dontCheckErrors = true;\n  setSent(false);\n  setSubmitError(undefined);\n  setLoading(false);\n  formControls.forEach((input) => {\n    input.value = ''; // Or default value?\n  });\n  Object.values(formControlGroups)\n    .filter(Boolean)\n    .forEach((node) => {\n      node.classList.toggle('with-error', false);\n    });\n  dontCheckErrors = false;\n}\n\n/* NOTE: This method isn't used\n * function onRecaptchaLoad() {\n *   console.log('[RequestFormModal:onRecaptchaLoad]', {\n *     grecaptcha: typeof grecaptcha !== 'undefined' && grecaptcha,\n *   });\n * }\n */\n\nfunction initRecaptcha() {\n  /* NOTE: grecaptcha methods:\n   * execute : ƒ ()\n   * getPageId : ƒ ()\n   * getResponse : ƒ ()\n   * ready : ƒ (X)\n   * render : ƒ ()\n   * reset : ƒ ()\n   */\n  const hasRecaptcha = typeof grecaptcha !== 'undefined';\n  if (!hasRecaptcha) {\n    const error = new Error('Recaptcha code has not been initialized!');\n    // eslint-disable-next-line no-console\n    console.error('[RequestFormModal:initRecaptcha]', error.message, {\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n    throw error;\n  }\n  const node = modalNode.querySelector('.g-recaptcha') as HTMLElement;\n  gcaptchaId = grecaptcha.render(node, {\n    sitekey: gcaptchaSiteKey,\n    hl: 'ru',\n    callback: captchaResponse,\n    theme: 'dark',\n    'expired-callback': captchaReset,\n    'error-callback': captchaReset,\n  });\n  console.log('[RequestFormModal:initRecaptcha]', {\n    gcaptchaSiteKey,\n    gcaptchaId,\n    grecaptcha,\n    node,\n  });\n  grecaptcha.reset(gcaptchaId);\n  modalNode.classList.toggle('CaptchaPassed', false);\n}\n\n/** Reset captcha result */\nfunction captchaReset() {\n  modalNode.classList.toggle('CaptchaPassed', false);\n}\n\n/** Confirm captcha */\nfunction captchaResponse(response: string) {\n  const isSuccess = !!response;\n  console.log('[RequestFormModal:captchaResponse]', {\n    isSuccess,\n    response,\n  });\n  modalNode.classList.toggle('CaptchaPassed', isSuccess);\n}\n\nfunction onSubmit() {\n  let hasErrors = false;\n  const formData: Record<string, string | boolean> = {};\n  if (isDebug) {\n    formData.debug = true;\n  }\n  if (isDev) {\n    formData.dev = true;\n  }\n  formControls.forEach((input) => {\n    const { id, value } = input;\n    if (!debugDoSubmitWithErrors && !checkInputValue(id)) {\n      hasErrors = true;\n    }\n    formData[id] = value;\n  });\n  const submitMethod = 'POST';\n  console.log('[RequestFormModal:onSubmit] Before fetch', {\n    // 'process.env.DEV': process.env.DEV,\n    // 'process.env.DEBUG': process.env.DEBUG,\n    // debugDoSubmitWithErrors,\n    grecaptcha: typeof grecaptcha !== 'undefined' && grecaptcha,\n    submitMethod,\n    submitUrl,\n    hasErrors,\n    formData,\n    uploadsFolder,\n    formControls,\n  });\n  if (hasErrors) {\n    return;\n  }\n  // Send form...\n  setLoading(true);\n  fetch(submitUrl, {\n    method: submitMethod,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(formData),\n  })\n    .then((res) => {\n      const { headers, ok, status } = res;\n      if (!ok) {\n        const msg = `Ошибка отправки данных (код ${status})`;\n        const error = new Error(msg);\n        // eslint-disable-next-line no-console\n        console.error('[RequestFormModal:onSubmit] fetch result failed', status, {\n          error,\n          status,\n          res,\n        });\n        throw error;\n      }\n      const contentType = headers.get('content-type');\n      const isJson = contentType.startsWith('application/json');\n      console.log('[RequestFormModal:onSubmit] fetch result', {\n        contentType,\n        headers,\n        res,\n      });\n      return isJson ? res.json() : res.text();\n    })\n    .then((data: BaseRepsonse) => {\n      const dataType = typeof data;\n      console.log('[RequestFormModal:onSubmit] fetch data', dataType, {\n        data,\n      });\n      if (dataType !== 'object') {\n        // throw new Error(`Получен некорректный тип ответа сервера: ${dataType}`);\n        const errorText = 'Получен некорректный ответ сервера (см. отладочный вывод)';\n        const error = Error(errorText);\n        // eslint-disable-next-line no-console\n        console.error('[RequestFormModal:onSubmit] Data error:', errorText, {\n          error,\n          data,\n          dataType,\n        });\n        debugger; // eslint-disable-line no-debugger\n        throw error;\n      }\n      if (!data.ok || data.error) {\n        const errorText = data.error\n          ? 'Ошибка сервера: ' + data.error\n          : 'Неизвестная ошибка сервера (смотри логи сервера)';\n        const error = Error(errorText);\n        // eslint-disable-next-line no-console\n        console.error('[RequestFormModal:onSubmit] Server error:', errorText, {\n          error,\n          data,\n          dataType,\n        });\n        debugger; // eslint-disable-line no-debugger\n        throw error;\n      }\n      setSubmitError(undefined);\n      setSent(true);\n      // resetForm();\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('[RequestFormModal:onSubmit] fetch error', {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      setSubmitError(error);\n    })\n    .finally(() => {\n      setLoading(false);\n    });\n}\n\nfunction clickControlButton(_event: PointerEvent) {\n  showModal();\n}\n\nfunction onInputChange(event: Event) {\n  const target = event.target as HTMLInputElement;\n  const { id } = target;\n  /* console.log('[RequestFormModal:onInputChange]', {\n   *   id,\n   *   // value,\n   *   target,\n   *   event,\n   * });\n   */\n  checkInputValue(id);\n}\n\nfunction initModal() {\n  createModalWrapper();\n  modalNode = document.querySelector('#RequestFormModal');\n  if (!modalNode) {\n    const error = new Error('Not found modal node!');\n    throw error;\n  }\n  formErrorNode = modalNode.querySelector('.form-error');\n  innerNode = modalNode.querySelector('.modal-content');\n  const closeButtons = modalNode.querySelectorAll('.CloseModal');\n  const submitButton = modalNode.querySelector('.SubmitButton');\n  submitButton.addEventListener('click', onSubmit);\n  closeButtons.forEach((node) => {\n    node.addEventListener('click', closeModal);\n  });\n  formControls = modalNode.querySelectorAll('.form-control');\n  formControls.forEach((node) => {\n    const { id } = node;\n    node.addEventListener('change', onInputChange);\n    formControlGroups[id] = modalNode.querySelector(`.form-group#${id}-group`);\n  });\n  initRecaptcha();\n}\n\nexport function initRequestFormModal() {\n  // console.log('[RequestFormModal:initRequestFormModal]');\n  pageWrapperNode = document.querySelector('.page-wrapper');\n  const controlButtons = document.querySelectorAll('.RequestFormButton');\n  controlButtons.forEach((node) => {\n    node.addEventListener('click', clickControlButton);\n  });\n  /* // DEBUG: Show the modal immediately (for test purposes)\n   * showModal();\n   */\n}\n\n// // @ts-ignore: DEBUG\n// window.onRecaptchaLoad = onRecaptchaLoad;\n","export function htmlToNode(html: string) {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  const nNodes = template.content.childNodes.length;\n  if (nNodes !== 1) {\n    const error = new Error(\n      `html parameter must represent a single node; got ${nNodes}. ` +\n        'Note that leading or trailing spaces around an element in your ' +\n        'HTML, like \" <img/> \", get parsed as text nodes neighbouring ' +\n        'the element; call .trim() on your input to avoid this.',\n    );\n    // eslint-disable-next-line no-console\n    console.error('[RequestFormModal:htmlToNode]', error);\n    debugger; // eslint-disable-line no-debugger\n    throw error;\n  }\n  return template.content.firstChild;\n}\n","export function getModalWrapperTemplate() {\n  // Create modal dom nodes...\n  const modalWrapperTemplate = `\n<div\n  id=\"RequestFormModal\"\n  class=\"RequestFormModal modal modal-backdrop Waiting with-error\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"RequestFormModalLabel\"\n>\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"RequestFormModalLabel\">\n          <span class=\"ShowForm\">Отправить заявку</span>\n          <span class=\"ShowMessage\">Спасибо!</span>\n        </h2>\n        <button type=\"button\" class=\"close CloseModal\" data-dismiss=\"modal\" aria-label=\"Закрыть\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"ShowForm EditForm\">\n          <p class=\"DullText\">\n            Отправьте онлайн-заявку на покупку недвижимости.\n          </p>\n          <form class=\"form FormContent\">\n            <small class=\"error form-error text-danger\">Текст ошибки.</small>\n            <div class=\"form-group with-error\" id=\"name-group\">\n              <input name=\"name\" id=\"name\" class=\"form-control\" placeholder=\"Имя *\" type=\"text\" data-required=\"true\" value=\"Test with error\" />\n              <small class=\"error text-danger\">Текст ошибки.</small>\n            </div>\n            <div class=\"form-group -with-error\" id=\"email-group\">\n              <input name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"E-mail *\" type=\"email\" data-required=\"true\" />\n              <small class=\"error text-danger\">Текст ошибки.</small>\n            </div>\n            <div class=\"form-group\" id=\"phone-group\">\n              <input name=\"phone\" id=\"phone\" class=\"form-control\" placeholder=\"Телефон *\" type=\"phone\" data-required=\"true\" />\n              <small class=\"error text-danger\">Текст ошибки.</small>\n            </div>\n            <div class=\"form-group\" id=\"comment-group\">\n              <textarea name=\"comment\" id=\"comment\" class=\"form-control\" placeholder=\"Комментарий\" rows=\"4\"></textarea>\n              <small class=\"error text-danger\">Текст ошибки.</small>\n            </div>\n            <div class=\"form-group\" id=\"comment-group\">\n              <div class=\"g-recaptcha\"></div>\n            </div>\n          </form>\n          <p class=\"DullText\">\n            Нажимая кнопку «Отправить заявку» вы соглашаетесь с политикой\n            конфиденциальности и даёте согласие на обработку персональных\n            данных.\n          </p>\n        </div>\n        <div class=\"ShowMessage\">\n          Ваша заявка принята и будет обработана в ближайшее время, Вы получите уведомление на адрес электронной почты.\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary CloseModal\" data-dismiss=\"modal\">Закрыть</button>\n        <button type=\"button\" class=\"btn btn-primary SubmitButton\">Отправить</button>\n      </div>\n      <div class=\"SpinnerSplash\">\n        <div class=\"Spinner\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n  return modalWrapperTemplate;\n}\n","/** @module Scripts root module\n *  @since 2024.10.10, 15:26\n *  @changed 2024.10.13, 19:40\n */\n\n// NOTE: Templates are including only for dev-mode update\nimport './include-template.html';\n\nimport './app-info.scss';\nimport './variables/variables-expose.scss';\n\nimport './misc-styles';\n\nimport { initRootNode } from './RootNode';\nimport { initHero } from './Hero';\nimport { initLazyImages } from './LazyImages';\nimport { initRequestFormModal } from './RequestFormModal';\n\n// Print app info...\nconst appVersion = process.env.APP_VERSION;\nconst isDebug = process.env.DEBUG;\nconst isDev = process.env.DEV;\n// eslint-disable-next-line no-console\nconst consoleMethod = isDebug || isDev ? console.warn : console.log;\nconsoleMethod.call(console, appVersion);\n\nfunction initPage() {\n  // console.log('[root:initPage]');\n  // Start subcomponents...\n  initLazyImages();\n  initRootNode();\n  initHero();\n  initRequestFormModal();\n}\n\nwindow.addEventListener('load', initPage);\n","export function initRootNode() {\n  const mainNode = document.querySelector('.main');\n  mainNode.classList.add('Root');\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","initLazyImageNode","node","observer","rect","wHeight","top","getBoundingClientRect","window","innerHeight","document","documentElement","clientHeight","Promise","resolve","getAttribute","url","dataset","lazyMode","originalImage","setAttribute","reject","imgNode","createElement","addEventListener","_event","event","target","href","baseURI","error","Error","console","then","img","startsWith","backgroundImage","src","style","setTimeout","removeAttribute","unobserve","catch","IntersectionObserver","entries","forEach","_1","_2","_3","uploadsFolder","quoteHtmlAttr","str","preserveCR","crValue","String","replace","gcaptchaId","modalNode","formErrorNode","innerNode","pageWrapperNode","formControls","submitUrl","gcaptchaSiteKey","isVisible","formControlGroups","dontCheckErrors","createModalWrapper","wrapperNode","html","template","innerHTML","trim","nNodes","content","childNodes","length","firstChild","htmlToNode","body","append","toggleModal","show","undefined","classList","toggle","onKeyPress","onOuterClick","onInnerClick","removeEventListener","closeModal","showModal","querySelector","closeButtons","querySelectorAll","onSubmit","id","onInputChange","grecaptcha","message","render","sitekey","hl","callback","captchaResponse","theme","captchaReset","log","reset","initRecaptcha","initModal","setSent","setSubmitError","setLoading","input","values","filter","Boolean","requestAnimationFrame","stopPropagation","checkInputValue","group","errors","push","hasErrors","map","join","status","err","errorText","hasError","isSent","response","isSuccess","formData","submitMethod","fetch","method","headers","Accept","JSON","stringify","res","ok","msg","contentType","isJson","json","text","data","dataType","finally","clickControlButton","warn","observe","add"],"sourceRoot":""}