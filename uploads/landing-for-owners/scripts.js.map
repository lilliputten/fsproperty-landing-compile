{"version":3,"file":"uploads/landing-for-owners/scripts.js","mappings":"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","sources":["webpack://fsproperty-landing-compile/./src/LazyImages/LazyImages.ts","webpack://fsproperty-landing-compile/./src/RequestFormModal/RequestFormModal.ts","webpack://fsproperty-landing-compile/./src/root.ts","webpack://fsproperty-landing-compile/./src/RootNode/RootNode.ts"],"sourcesContent":["import './LazyImages.styles.scss';\n\nfunction isElementInViewport(el: HTMLElement) {\n  const rect = el.getBoundingClientRect();\n  const wHeight = window.innerHeight || document.documentElement.clientHeight;\n  const { top, bottom } = rect;\n  // NOTE: Checking only vertical position\n  return bottom >= 0 && top <= wHeight;\n}\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const imgNode = document.createElement('img');\n    imgNode.setAttribute('src', url);\n    imgNode.addEventListener('load', (_event) => {\n      /* console.log('[LazyImages:loadImage] success', {\n       *   url,\n       *   _event,\n       * });\n       */\n      resolve(imgNode);\n    });\n    imgNode.addEventListener('error', (event) => {\n      const { target } = event;\n      // @ts-ignore: To add correct typings?\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load image with url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[LazyImages:loadImage]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n  });\n}\n\nfunction initLazyImageNode(node: HTMLElement, observer: IntersectionObserver) {\n  const isVisible = isElementInViewport(node);\n  if (!isVisible) {\n    return Promise.resolve(false);\n  }\n  const isLoaded = node.getAttribute('data-lazy-loaded');\n  if (isLoaded) {\n    return Promise.resolve(true);\n  }\n  /* NOTE: An alternative way to fetch data attributes\n   * const dataLazyImage = node.getAttribute('data-lazy-image');\n   * const dataOriginalImage = node.getAttribute('dataOriginalImage');\n   */\n  const { dataset } = node;\n  const { lazyMode, originalImage } = dataset;\n  /* console.log('[LazyImages:initLazyImageNode]', {\n   *   isVisible,\n   *   lazyMode,\n   *   originalImage,\n   *   node,\n   * });\n   */\n  // TODO: Load images asynchronously into another (temp) node, control success or error, and update target only on success\n  node.setAttribute('data-lazy-loading', 'true');\n  loadImage(originalImage)\n    .then((img) => {\n      if (lazyMode.startsWith('background')) {\n        const backgroundImage = `url('${img.src}')`;\n        node.style.backgroundImage = backgroundImage;\n      } else {\n        if (node.getAttribute('src') === img.src) {\n          return false;\n        }\n        node.setAttribute('src', originalImage);\n      }\n      // Finish\n      setTimeout(() => {\n        node.setAttribute('data-lazy-loaded', 'true');\n        node.removeAttribute('data-lazy-loading');\n      }, 350);\n      observer.unobserve(node);\n      return true;\n    })\n    .catch(() => {});\n}\n\nconst observer = new IntersectionObserver((entries, observer) => {\n  entries.forEach(({ target }) => {\n    initLazyImageNode(target as HTMLElement, observer);\n  });\n});\n\nexport function initLazyImages() {\n  const nodes = document.querySelectorAll('.LazyImage');\n  nodes.forEach((node: HTMLDivElement) => {\n    observer.observe(node);\n  });\n}\n","import { uploadsFolder } from '../variables';\n\nimport './RequestFormModal.styles.scss';\n\nlet isVisible = false;\nlet modalNode: HTMLElement;\n\nlet innerEl: HTMLElement;\nlet outerEl: HTMLElement;\nlet pageWrapperNode: HTMLElement;\n\nfunction getModalWrapperTemplate() {\n  // Create modal dom nodes...\n  const modalWrapperTemplate = `\n<div\n  id=\"RequestFormModal\"\n  class=\"RequestFormModal modal modal-backdrop\"\n  -tabindex=\"-1\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"RequestFormModalLabel\"\n  -style=\"display: block; opacity: 1\"\n>\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"RequestFormModalLabel\">\n          <span class=\"ShowForm\">Отправить заявку</span>\n          <span class=\"ShowMessage\">Спасибо!</span>\n        </h2>\n        <button type=\"button\" class=\"close CloseModal\" data-dismiss=\"modal\" aria-label=\"Закрыть\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"ShowForm DemoForm\">\n          --- Форма заявки ---\n        </div>\n        <div class=\"ShowMessage\">\n          Ваша заявка принята и будет обработана в ближайшее время, Вы получите уведомление на адрес электронной почты.\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary CloseModal\" data-dismiss=\"modal\">Закрыть</button>\n        <button type=\"button\" class=\"btn btn-primary SubmitButton\">Отправить</button>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n  return modalWrapperTemplate;\n}\n\nfunction htmlToNode(html: string) {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  const nNodes = template.content.childNodes.length;\n  if (nNodes !== 1) {\n    const error = new Error(\n      `html parameter must represent a single node; got ${nNodes}. ` +\n        'Note that leading or trailing spaces around an element in your ' +\n        'HTML, like \" <img/> \", get parsed as text nodes neighbouring ' +\n        'the element; call .trim() on your input to avoid this.',\n    );\n    // eslint-disable-next-line no-console\n    console.error('[RequestFormModal:htmlToNode]', error);\n    debugger; // eslint-disable-line no-debugger\n    throw error;\n  }\n  return template.content.firstChild;\n}\n\nfunction createModalWrapper() {\n  const modalWrapperTemplate = getModalWrapperTemplate();\n  const wrapperNode = htmlToNode(modalWrapperTemplate);\n  document.body.append(wrapperNode);\n}\n\nfunction toggleModal(show?: boolean) {\n  if (show == undefined) {\n    show = !isVisible;\n  } else if (show === isVisible) {\n    return;\n  }\n  document.body.classList.toggle('WithModal', show);\n  if (show) {\n    modalNode.classList.toggle('Message', false);\n    pageWrapperNode.setAttribute('inert', 'true');\n    document.addEventListener('keydown', onKeyPress);\n    outerEl.addEventListener('mousedown', onOuterClick);\n    innerEl.addEventListener('mousedown', onInnerClick);\n  } else {\n    pageWrapperNode.removeAttribute('inert');\n    document.removeEventListener('keydown', onKeyPress);\n    outerEl.removeEventListener('mousedown', onOuterClick);\n    innerEl.removeEventListener('mousedown', onInnerClick);\n  }\n  modalNode.classList.toggle('show', show);\n  isVisible = show;\n}\n\nfunction closeModal() {\n  toggleModal(false);\n}\n\nfunction onKeyPress(event: KeyboardEvent) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n}\n\n// Close modal on outer (not inner, see `onInnerClick` below) element click...\nfunction onOuterClick(_event: MouseEvent) {\n  closeModal();\n}\n// Prevent outer element click handle\nfunction onInnerClick(event: MouseEvent) {\n  event.stopPropagation();\n}\n\nfunction submitForm() {\n  modalNode.classList.toggle('Message', true);\n}\n\nfunction clickControlButton(_event: PointerEvent) {\n  toggleModal();\n}\n\nexport function initRequestFormModal() {\n  pageWrapperNode = document.querySelector('.page-wrapper');\n  const controlButtons = document.querySelectorAll('.RequestFormButton');\n  /* console.log('[RequestFormModal]', {\n   *   modalNode,\n   *   uploadsFolder,\n   *   controlButtons,\n   *   jq: $,\n   * });\n   */\n  controlButtons.forEach((node) => {\n    node.addEventListener('click', clickControlButton);\n  });\n  createModalWrapper();\n  modalNode = document.querySelector('#RequestFormModal');\n  outerEl = modalNode;\n  innerEl = modalNode.querySelector('.modal-content');\n  const closeButtons = modalNode.querySelectorAll('.CloseModal');\n  const submitButton = modalNode.querySelector('.SubmitButton');\n  submitButton.addEventListener('click', submitForm);\n  closeButtons.forEach((node) => {\n    node.addEventListener('click', closeModal);\n  });\n}\n","/** @module Scripts root module\n *  @since 2024.10.10, 15:26\n *  @changed 2024.10.13, 19:40\n */\n\n// NOTE: Templates are including only for dev-mode update\nimport './include-template.html';\n\nimport './app-info.scss';\nimport './variables/variables-expose.scss';\n\nimport './misc-styles';\n\nimport { initRootNode } from './RootNode';\nimport { initHero } from './Hero';\nimport { initLazyImages } from './LazyImages';\nimport { initRequestFormModal } from './RequestFormModal';\n\n// Print app info...\nconst appVersion = process.env.APP_VERSION;\nconst isDebug = process.env.DEBUG;\nconst isDev = process.env.DEV;\n// eslint-disable-next-line no-console\nconst consoleMethod = isDebug || isDev ? console.warn : console.log;\nconsoleMethod.call(console, appVersion);\n\nfunction initPage() {\n  // console.log('[root:initPage]');\n  // Start subcomponents...\n  initLazyImages();\n  initRootNode();\n  initHero();\n  initRequestFormModal();\n}\n\nwindow.addEventListener('load', initPage);\n","// import './RootNode.styles.scss';\n\nexport function initRootNode() {\n  const mainNode = document.querySelector('.main');\n  /* // Other default nodes (UNUSED)\n   * const sidebarNode = document.querySelector('.sidebar');\n   * const mainContainerNode = mainNode.querySelector('.container');\n   * const mainRowNode = mainNode.querySelector('.row');\n   * const mainContentNode = mainNode.querySelector('.row > .content');\n   * const pathNode = mainContentNode?.querySelector('.path');\n   */\n  /* console.log('[RootNode:initRootNode]', {\n   *   mainNode,\n   *   mainContainerNode,\n   *   mainRowNode,\n   *   mainContentNode,\n   *   pathNode,\n   *   sidebarNode,\n   * });\n   */\n  /* // UNUSED\n   * // Remove unused nodes...\n   * if (sidebarNode) {\n   *   sidebarNode.remove();\n   * }\n   * if (pathNode) {\n   *   pathNode.remove();\n   * }\n   */\n  // Parent nodes...\n  mainNode.classList.add('Root');\n  /* // Modify other default layout nodes (UNUSED)\n   * // mainNode.classList.add('HeroSection');\n   * if (mainContainerNode) {\n   *   mainContainerNode.classList.add('HeroContainer');\n   *   // mainContainerNode.classList.remove('container');\n   * }\n   * if (mainRowNode) {\n   *   mainRowNode.classList.add('HeroRow');\n   *   // mainRowNode.classList.remove('row');\n   * }\n   * // Content node...\n   * if (mainContentNode) {\n   *   mainContentNode.classList.remove('col-sm-8');\n   *   mainContentNode.classList.remove('col-md-9');\n   *   // mainContentNode.classList.add('col-12'); // ???\n   *   mainContentNode.classList.add('HeroVisualBlock');\n   *   // mainContentNode.classList.remove('content');\n   * }\n   */\n}\n"],"names":["initLazyImageNode","node","observer","rect","wHeight","top","getBoundingClientRect","window","innerHeight","document","documentElement","clientHeight","Promise","resolve","getAttribute","url","dataset","lazyMode","originalImage","setAttribute","reject","imgNode","createElement","addEventListener","_event","event","target","href","baseURI","error","Error","console","then","img","startsWith","backgroundImage","src","style","setTimeout","removeAttribute","unobserve","catch","IntersectionObserver","entries","forEach","modalNode","innerEl","outerEl","pageWrapperNode","isVisible","createModalWrapper","wrapperNode","html","template","innerHTML","trim","nNodes","content","childNodes","length","firstChild","htmlToNode","body","append","toggleModal","show","undefined","classList","toggle","onKeyPress","onOuterClick","onInnerClick","removeEventListener","closeModal","key","stopPropagation","submitForm","clickControlButton","warn","call","querySelectorAll","observe","querySelector","add","closeButtons","initRequestFormModal"],"sourceRoot":""}