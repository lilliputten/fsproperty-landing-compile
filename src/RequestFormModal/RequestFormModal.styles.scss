body.WithModal {
  overflow: hidden !important;
}

.RequestFormModal {
  display: block;
  transition: all var(--transitionTimeMs);
  pointer-events: none;
  opacity: 0;
  & {
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    overflow: hidden;
  }
  .SpinnerSplash {
    transition: opacity var(--transitionTimeMs);
  }
  &:not(.Waiting) {
    .SpinnerSplash {
      opacity: 0;
      pointer-events: none;
    }
  }
  &.Waiting {
    button {
      opacity: 0.2;
      pointer-events: none;
    }
  }
  &.modal-backdrop {
    background-color: rgba(0 0 0 / 80%);
  }
  .modal-dialog,
  .modal-content {
    position: relative;
    max-height: 100%;
    overflow: hidden;
  }
  .modal-dialog {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    margin: 0;
    padding: 2em;
  }
  .modal-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    background-color: var(--bgDarkColor);
    color: #fff;
    max-width: 100%;
    // Default (desired) width
    width: 600px;
  }
  .modal-body {
    flex: 1;
    position: relative;
    max-height: 100%;
    overflow: auto;
  }
  .modal-dialog {
    transition: all var(--transitionTimeMs);
    top: -50px;
  }
  &.show {
    pointer-events: all;
    opacity: 1;
    .modal-dialog {
      top: 0;
    }
  }
  button.close {
    color: #fff;
    text-shadow: none;
  }
  .modal-header,
  .modal-footer {
    border-color: rgba(120 120 120 / 10%);
  }
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1em 1em;
    gap: 1em;
  }
  .modal-footer {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 0.5em;
    flex-wrap: wrap;
  }
  .modal-title {
    color: var(--goldColor);
    font-size: 2.25em;
    font-family: var(--softFontIt);
  }
  .modal-footer {
    button {
      font-size: 1em;
      padding: 1em 2em;
      text-transform: uppercase;
      border-radius: 6px;
      white-space: normal;
      transition: all var(--transitionTimeMs);
      &:hover {
        opacity: 0.8;
      }
    }
  }
  &:not(.Message) .ShowMessage,
  &.Message .ShowForm,
  &.Message .SubmitButton {
    display: none;
  }
  &:not(.CaptchaPassed) .SubmitButton {
    pointer-events: none;
    opacity: 0.3;
    background-color: #111;
    border-color: #333;
  }
  .modal-body > * {
    padding: 1em 0;
  }
  .EditForm {
    display: flex;
    flex-direction: column;
    gap: 1.5em;
  }
  &:not(.with-error) {
    > .form-error {
      display: none;
    }
  }
  .form {
    display: flex;
    flex-direction: column;
    gap: 1em;
  }
  .DullText {
    text-align: center;
    opacity: 0.5;
    font-size: 90%;
  }
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 1em;
    .text-danger {
      opacity: 0.65;
    }
    &:not(.with-error) {
      > .error {
        display: none;
      }
    }
  }
  $errorColor: #a94442;
  $bgColor: var(--bgDarkColor);
  $errorBgColor: rgba(red, 20%);
  $textColor: rgba(255, 255, 255, 0.7);
  $bottomLineColor: rgba(255, 255, 255, 0.3);
  $bottomLineActiveColor: rgba(255, 255, 255, 0.5);
  $placeholderColor: rgba(255, 255, 255, 0.15);
  @mixin inputStyle($textColor, $bgColor, $bottomLineColor, $bottomLineActiveColor) {
    & {
      color: $textColor;
      background-color: $bgColor;
      box-shadow: 0px 1px 0px 0px $bottomLineColor;
      &:focus,
      &:active {
        box-shadow: 0px 2px 0px 0px $bottomLineActiveColor;
      }
    }
    &:-webkit-autofill {
      -webkit-text-fill-color: $textColor !important;
    }
    &:-webkit-autofill {
      -webkit-box-shadow:
        0 0 0 30px $bgColor inset,
        0px 1px 0px 0px $bottomLineColor !important;
      &:focus,
      &:active {
        box-shadow:
          0 0 0 30px $bgColor inset,
          0px 2px 0px 0px $bottomLineActiveColor !important;
      }
    }
  }
  .form-control {
    &::placeholder {
      color: $placeholderColor;
    }
    @include inputStyle($textColor, $bgColor, $bottomLineColor, $bottomLineActiveColor);
  }
  .with-error .form-control {
    &::placeholder {
      color: rgba($errorColor, 0.3);
    }
    @include inputStyle($errorColor, $bgColor, rgba($errorColor, 0.3), rgba($errorColor, 0.6));
  }
  textarea {
    height: auto;
  }
  .g-recaptcha {
    // * {
    //   width: 100% !important;
    // }
  }
}
